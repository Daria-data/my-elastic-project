input {
  file {
    path => "/usr/share/logstash/data/movies_elastic.json"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  mutate {
    remove_field => ["@version", "host"]
  }
}

# Add 'decaede' field based on 'year' field
ruby {
  code => '
    require "date"
    # Check if the "release_date" field exists within "fields"
    if event.get("fields") && event.get("fields")["release_date"]
      date_str = event.get("fields")["release_date"]
      begin
        # Parse the ISO8601 date string
        date = Date.parse(date_str)
        # Reformat the date to a more readable format, e.g. "18 Jan 2013"
        formatted_date = date.strftime("%d %b %Y")
        event.set("fields.release_date", formatted_date)
        # Extract the year and compute the decade, e.g. "2010s"
        year = date.year
        decade = (year / 10) * 10
        event.set("fields.decade", decade.to_s + "s")
      rescue Exception => e
        # Tag event if date parsing fails
        event.tag("date_parse_failure")
      end
    end
  '
}


# Convert running_time_secs to running_time_mins
ruby {
  code => '
    if event.get("running_time_secs")
      secs = event.get("running_time_secs").to_i;
      event.set("running_time_mins", secs / 60.0);
    end
  '
}

# Drop events where rating is less than 5
if [rating] and [rating] < 5 {
  drop { }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "movies"
  }
  stdout { codec => rubydebug }
}
